apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: client-portal
  namespace: argocd
  labels:
    app: client-portal
    component: frontend
    environment: dev
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: insurance-platform
  source:
    repoURL: https://github.com/your-org/security-infrastructure
    targetRevision: HEAD
    path: apps/client-portal/deployments/k8s
  destination:
    server: https://kubernetes.default.svc
    namespace: insurance-platform
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
  - group: ""
    kind: ConfigMap
    jsonPointers:
    - /data
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: insurance-platform
  namespace: argocd
spec:
  description: Insurance Platform Applications
  sourceRepos:
  - https://github.com/your-org/security-infrastructure
  - https://charts.bitnami.com/bitnami
  - https://prometheus-community.github.io/helm-charts
  destinations:
  - namespace: insurance-platform
    server: https://kubernetes.default.svc
  - namespace: monitoring
    server: https://kubernetes.default.svc
  - namespace: vault
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRole
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRoleBinding
  namespaceResourceWhitelist:
  - group: ''
    kind: Service
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: ServiceAccount
  - group: 'apps'
    kind: Deployment
  - group: 'apps'
    kind: ReplicaSet
  - group: 'networking.k8s.io'
    kind: NetworkPolicy
  - group: 'networking.k8s.io'
    kind: Ingress
  roles:
  - name: admin
    policies:
    - p, proj:insurance-platform:admin, applications, *, insurance-platform/*, allow
    - p, proj:insurance-platform:admin, repositories, *, *, allow
    groups:
    - insurance-platform:admins
  - name: developer
    policies:
    - p, proj:insurance-platform:developer, applications, get, insurance-platform/*, allow
    - p, proj:insurance-platform:developer, applications, sync, insurance-platform/*, allow
    groups:
    - insurance-platform:developers 